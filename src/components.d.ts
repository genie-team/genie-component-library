/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GenieCard {
        /**
          * If `true`, a button tag will be rendered and the card will be tappable.
         */
        "button": boolean;
        /**
          * If `true`, the user cannot interact with the card.
         */
        "disabled": boolean;
        /**
          * This attribute instructs browsers to download a URL instead of navigating to it, so the user will be prompted to save it as a local file. If the attribute has a value, it is used as the pre-filled file name in the Save prompt (the user can still change the file name if they want).
         */
        "download": string | undefined;
        "heading": string;
        /**
          * Contains a URL or a URL fragment that the hyperlink points to. If this property is set, an anchor tag will be rendered.
         */
        "href": string | undefined;
        /**
          * Don't alter style on hover
         */
        "noHover": boolean;
        /**
          * Specifies the relationship of the target object to the link object. The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).
         */
        "rel": string | undefined;
        /**
          * Specifies where to display the linked URL. Only applies when an `href` is provided. Special keywords: `"_blank"`, `"_self"`, `"_parent"`, `"_top"`.
         */
        "target": string | undefined;
        "text": string;
        /**
          * The type of the button. Only used when an `onclick` or `button` property is present.
         */
        "type": "submit" | "reset" | "button";
    }
    interface GenieStripe {
        /**
          * Number of blocks in the stripe
         */
        "numBlocks": number;
    }
}
declare global {
    interface HTMLGenieCardElement extends Components.GenieCard, HTMLStencilElement {
    }
    var HTMLGenieCardElement: {
        prototype: HTMLGenieCardElement;
        new (): HTMLGenieCardElement;
    };
    interface HTMLGenieStripeElement extends Components.GenieStripe, HTMLStencilElement {
    }
    var HTMLGenieStripeElement: {
        prototype: HTMLGenieStripeElement;
        new (): HTMLGenieStripeElement;
    };
    interface HTMLElementTagNameMap {
        "genie-card": HTMLGenieCardElement;
        "genie-stripe": HTMLGenieStripeElement;
    }
}
declare namespace LocalJSX {
    interface GenieCard {
        /**
          * If `true`, a button tag will be rendered and the card will be tappable.
         */
        "button"?: boolean;
        /**
          * If `true`, the user cannot interact with the card.
         */
        "disabled"?: boolean;
        /**
          * This attribute instructs browsers to download a URL instead of navigating to it, so the user will be prompted to save it as a local file. If the attribute has a value, it is used as the pre-filled file name in the Save prompt (the user can still change the file name if they want).
         */
        "download"?: string | undefined;
        "heading"?: string;
        /**
          * Contains a URL or a URL fragment that the hyperlink points to. If this property is set, an anchor tag will be rendered.
         */
        "href"?: string | undefined;
        /**
          * Don't alter style on hover
         */
        "noHover"?: boolean;
        /**
          * Specifies the relationship of the target object to the link object. The value is a space-separated list of [link types](https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types).
         */
        "rel"?: string | undefined;
        /**
          * Specifies where to display the linked URL. Only applies when an `href` is provided. Special keywords: `"_blank"`, `"_self"`, `"_parent"`, `"_top"`.
         */
        "target"?: string | undefined;
        "text"?: string;
        /**
          * The type of the button. Only used when an `onclick` or `button` property is present.
         */
        "type"?: "submit" | "reset" | "button";
    }
    interface GenieStripe {
        /**
          * Number of blocks in the stripe
         */
        "numBlocks"?: number;
    }
    interface IntrinsicElements {
        "genie-card": GenieCard;
        "genie-stripe": GenieStripe;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "genie-card": LocalJSX.GenieCard & JSXBase.HTMLAttributes<HTMLGenieCardElement>;
            "genie-stripe": LocalJSX.GenieStripe & JSXBase.HTMLAttributes<HTMLGenieStripeElement>;
        }
    }
}
